datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  cognitoId    String?   @unique
  access_token String?
  role         String
  created_at   DateTime  @default(now())
  updated_at   DateTime  @default(now())
  Customer     Customer?
  Driver       Driver?
}

model Customer {
  id               Int               @id @default(autoincrement())
  user_id          Int               @unique
  first_name       String
  last_name        String
  created_at       DateTime          @default(now())
  updated_at       DateTime          @default(now())
  User             User              @relation(fields: [user_id], references: [id])
  DeliveryRequests DeliveryRequest[]
}

model Driver {
  id         Int          @id @default(autoincrement())
  user_id    Int          @unique
  created_at DateTime     @default(now())
  updated_at DateTime     @default(now())
  User       User         @relation(fields: [user_id], references: [id])
  Bids       Bid[]
  BidHistory BidHistory[]
}

model DeliveryRequest {
  id                      Int          @id @default(autoincrement())
  pickup_location         String
  dropoff_location        String
  description             String
  preferred_delivery_time DateTime
  price_offer             Float        @default(0)
  initial_price_offer     Float        @default(0)
  status                  String       @default("Pending")
  customer_id             Int?
  created_at              DateTime     @default(now())
  updated_at              DateTime     @default(now())
  bid_end_time            DateTime?
  Customer                Customer?    @relation(fields: [customer_id], references: [id])
  Bids                    Bid[]
  BidHistory              BidHistory[]
}

model Bid {
  id                  Int              @id @default(autoincrement())
  driver_id           Int?
  delivery_request_id Int?
  bid_price           Float
  bid_time            DateTime         @default(now())
  status              String           @default("Pending")
  Driver              Driver?          @relation(fields: [driver_id], references: [id])
  delivery_requests   DeliveryRequest? @relation(fields: [delivery_request_id], references: [id])
  BidHistory          BidHistory[]
}

model BidHistory {
  id                  Int      @id @default(autoincrement())
  bid_id              Int
  driver_id           Int
  delivery_request_id Int
  bid_price           Float
  bid_time            DateTime
  status              String
  created_at          DateTime @default(now())

  Bid             Bid             @relation(fields: [bid_id], references: [id])
  Driver          Driver          @relation(fields: [driver_id], references: [id])
  DeliveryRequest DeliveryRequest @relation(fields: [delivery_request_id], references: [id])

  @@index([bid_id], name: "idx_bid_history_bid_id")
  @@index([driver_id], name: "idx_bid_history_driver_id")
  @@index([delivery_request_id], name: "idx_bid_history_delivery_request_id")
}
